// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messenger.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Messenger {

  /// <summary>Holder for reflection information generated from messenger.proto</summary>
  public static partial class MessengerReflection {

    #region Descriptor
    /// <summary>File descriptor for messenger.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MessengerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9tZXNzZW5nZXIucHJvdG8SCW1lc3NlbmdlciJfCgtSZXN1bHRSZXBseRIt",
            "CgZyZXN1bHQYASABKA4yHS5tZXNzZW5nZXIuUmVzdWx0UmVwbHkuUmVzdWx0",
            "IiEKBlJlc3VsdBILCgdTVUNDRVNTEAASCgoGRkFJTEVEEAEiIQoMTG9naW5S",
            "ZXF1ZXN0EhEKCXVzZXJfbmFtZRgBIAEoCSJZCgpMb2dpblJlcGx5EiYKBnJl",
            "c3VsdBgBIAEoCzIWLm1lc3Nlbmdlci5SZXN1bHRSZXBseRIPCgd1c2VyX2lk",
            "GAIgASgNEhIKCnRpbWVfc3RhbXAYAyABKAQiSAoLVGV4dE1lc3NhZ2USDwoH",
            "dXNlcl9pZBgBIAEoDRIUCgx0ZXh0X21lc3NhZ2UYAiABKAkSEgoKdGltZV9z",
            "dGFtcBgDIAEoBCIsChZQZW5kaW5nTWVzc2FnZXNSZXF1ZXN0EhIKCnRpbWVf",
            "c3RhbXAYASABKAQiVQoUUGVuZGluZ01lc3NhZ2VzUmVwbHkSJgoGcmVzdWx0",
            "GAEgASgLMhYubWVzc2VuZ2VyLlJlc3VsdFJlcGx5EhUKDXRleHRfbWVzc2Fn",
            "ZXMYAiADKAky6wEKCU1lc3NlbmdlchI5CgVMb2dpbhIXLm1lc3Nlbmdlci5M",
            "b2dpblJlcXVlc3QaFS5tZXNzZW5nZXIuTG9naW5SZXBseSIAEkMKD1NlbmRU",
            "ZXh0TWVzc2FnZRIWLm1lc3Nlbmdlci5UZXh0TWVzc2FnZRoWLm1lc3Nlbmdl",
            "ci5SZXN1bHRSZXBseSIAEl4KFlJlcXVlc3RQZW5kaW5nTWVzc2FnZXMSIS5t",
            "ZXNzZW5nZXIuUGVuZGluZ01lc3NhZ2VzUmVxdWVzdBofLm1lc3Nlbmdlci5Q",
            "ZW5kaW5nTWVzc2FnZXNSZXBseSIAYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Messenger.ResultReply), global::Messenger.ResultReply.Parser, new[]{ "Result" }, null, new[]{ typeof(global::Messenger.ResultReply.Types.Result) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Messenger.LoginRequest), global::Messenger.LoginRequest.Parser, new[]{ "UserName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Messenger.LoginReply), global::Messenger.LoginReply.Parser, new[]{ "Result", "UserId", "TimeStamp" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Messenger.TextMessage), global::Messenger.TextMessage.Parser, new[]{ "UserId", "TextMessage_", "TimeStamp" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Messenger.PendingMessagesRequest), global::Messenger.PendingMessagesRequest.Parser, new[]{ "TimeStamp" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Messenger.PendingMessagesReply), global::Messenger.PendingMessagesReply.Parser, new[]{ "Result", "TextMessages" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ResultReply : pb::IMessage<ResultReply> {
    private static readonly pb::MessageParser<ResultReply> _parser = new pb::MessageParser<ResultReply>(() => new ResultReply());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResultReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Messenger.MessengerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResultReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResultReply(ResultReply other) : this() {
      result_ = other.result_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResultReply Clone() {
      return new ResultReply(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::Messenger.ResultReply.Types.Result result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Messenger.ResultReply.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResultReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResultReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResultReply other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::Messenger.ResultReply.Types.Result) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ResultReply message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("SUCCESS")] Success = 0,
        [pbr::OriginalName("FAILED")] Failed = 1,
      }

    }
    #endregion

  }

  public sealed partial class LoginRequest : pb::IMessage<LoginRequest> {
    private static readonly pb::MessageParser<LoginRequest> _parser = new pb::MessageParser<LoginRequest>(() => new LoginRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Messenger.MessengerReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest(LoginRequest other) : this() {
      userName_ = other.userName_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest Clone() {
      return new LoginRequest(this);
    }

    /// <summary>Field number for the "user_name" field.</summary>
    public const int UserNameFieldNumber = 1;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserName != other.UserName) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserName);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            UserName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LoginReply : pb::IMessage<LoginReply> {
    private static readonly pb::MessageParser<LoginReply> _parser = new pb::MessageParser<LoginReply>(() => new LoginReply());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Messenger.MessengerReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginReply(LoginReply other) : this() {
      Result = other.result_ != null ? other.Result.Clone() : null;
      userId_ = other.userId_;
      timeStamp_ = other.timeStamp_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginReply Clone() {
      return new LoginReply(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::Messenger.ResultReply result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Messenger.ResultReply Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 2;
    private uint userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "time_stamp" field.</summary>
    public const int TimeStampFieldNumber = 3;
    private ulong timeStamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong TimeStamp {
      get { return timeStamp_; }
      set {
        timeStamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Result, other.Result)) return false;
      if (UserId != other.UserId) return false;
      if (TimeStamp != other.TimeStamp) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (result_ != null) hash ^= Result.GetHashCode();
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (TimeStamp != 0UL) hash ^= TimeStamp.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (result_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Result);
      }
      if (UserId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(UserId);
      }
      if (TimeStamp != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(TimeStamp);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UserId);
      }
      if (TimeStamp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TimeStamp);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginReply other) {
      if (other == null) {
        return;
      }
      if (other.result_ != null) {
        if (result_ == null) {
          result_ = new global::Messenger.ResultReply();
        }
        Result.MergeFrom(other.Result);
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.TimeStamp != 0UL) {
        TimeStamp = other.TimeStamp;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (result_ == null) {
              result_ = new global::Messenger.ResultReply();
            }
            input.ReadMessage(result_);
            break;
          }
          case 16: {
            UserId = input.ReadUInt32();
            break;
          }
          case 24: {
            TimeStamp = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TextMessage : pb::IMessage<TextMessage> {
    private static readonly pb::MessageParser<TextMessage> _parser = new pb::MessageParser<TextMessage>(() => new TextMessage());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TextMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Messenger.MessengerReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TextMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TextMessage(TextMessage other) : this() {
      userId_ = other.userId_;
      textMessage_ = other.textMessage_;
      timeStamp_ = other.timeStamp_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TextMessage Clone() {
      return new TextMessage(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private uint userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "text_message" field.</summary>
    public const int TextMessage_FieldNumber = 2;
    private string textMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TextMessage_ {
      get { return textMessage_; }
      set {
        textMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "time_stamp" field.</summary>
    public const int TimeStampFieldNumber = 3;
    private ulong timeStamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong TimeStamp {
      get { return timeStamp_; }
      set {
        timeStamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TextMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TextMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (TextMessage_ != other.TextMessage_) return false;
      if (TimeStamp != other.TimeStamp) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (TextMessage_.Length != 0) hash ^= TextMessage_.GetHashCode();
      if (TimeStamp != 0UL) hash ^= TimeStamp.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UserId);
      }
      if (TextMessage_.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TextMessage_);
      }
      if (TimeStamp != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(TimeStamp);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UserId);
      }
      if (TextMessage_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TextMessage_);
      }
      if (TimeStamp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TimeStamp);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TextMessage other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.TextMessage_.Length != 0) {
        TextMessage_ = other.TextMessage_;
      }
      if (other.TimeStamp != 0UL) {
        TimeStamp = other.TimeStamp;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UserId = input.ReadUInt32();
            break;
          }
          case 18: {
            TextMessage_ = input.ReadString();
            break;
          }
          case 24: {
            TimeStamp = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PendingMessagesRequest : pb::IMessage<PendingMessagesRequest> {
    private static readonly pb::MessageParser<PendingMessagesRequest> _parser = new pb::MessageParser<PendingMessagesRequest>(() => new PendingMessagesRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PendingMessagesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Messenger.MessengerReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PendingMessagesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PendingMessagesRequest(PendingMessagesRequest other) : this() {
      timeStamp_ = other.timeStamp_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PendingMessagesRequest Clone() {
      return new PendingMessagesRequest(this);
    }

    /// <summary>Field number for the "time_stamp" field.</summary>
    public const int TimeStampFieldNumber = 1;
    private ulong timeStamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong TimeStamp {
      get { return timeStamp_; }
      set {
        timeStamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PendingMessagesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PendingMessagesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TimeStamp != other.TimeStamp) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TimeStamp != 0UL) hash ^= TimeStamp.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TimeStamp != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(TimeStamp);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TimeStamp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TimeStamp);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PendingMessagesRequest other) {
      if (other == null) {
        return;
      }
      if (other.TimeStamp != 0UL) {
        TimeStamp = other.TimeStamp;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            TimeStamp = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PendingMessagesReply : pb::IMessage<PendingMessagesReply> {
    private static readonly pb::MessageParser<PendingMessagesReply> _parser = new pb::MessageParser<PendingMessagesReply>(() => new PendingMessagesReply());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PendingMessagesReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Messenger.MessengerReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PendingMessagesReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PendingMessagesReply(PendingMessagesReply other) : this() {
      Result = other.result_ != null ? other.Result.Clone() : null;
      textMessages_ = other.textMessages_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PendingMessagesReply Clone() {
      return new PendingMessagesReply(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::Messenger.ResultReply result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Messenger.ResultReply Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "text_messages" field.</summary>
    public const int TextMessagesFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_textMessages_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> textMessages_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> TextMessages {
      get { return textMessages_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PendingMessagesReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PendingMessagesReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Result, other.Result)) return false;
      if(!textMessages_.Equals(other.textMessages_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (result_ != null) hash ^= Result.GetHashCode();
      hash ^= textMessages_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (result_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Result);
      }
      textMessages_.WriteTo(output, _repeated_textMessages_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      size += textMessages_.CalculateSize(_repeated_textMessages_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PendingMessagesReply other) {
      if (other == null) {
        return;
      }
      if (other.result_ != null) {
        if (result_ == null) {
          result_ = new global::Messenger.ResultReply();
        }
        Result.MergeFrom(other.Result);
      }
      textMessages_.Add(other.textMessages_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (result_ == null) {
              result_ = new global::Messenger.ResultReply();
            }
            input.ReadMessage(result_);
            break;
          }
          case 18: {
            textMessages_.AddEntriesFrom(input, _repeated_textMessages_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
